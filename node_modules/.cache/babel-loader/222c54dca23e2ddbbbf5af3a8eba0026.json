{"ast":null,"code":"var _jsxFileName = \"/Users/mykaelsss/Desktop/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionPane = _ref => {\n  _s();\n\n  let {\n    transaction,\n    loading,\n    setTransactionApproval: consumerSetTransactionApproval\n  } = _ref;\n  const [approved, setApproved] = useState(transaction.approved);\n  const [transactions, setTransactions] = useState(transaction);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampPane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampPane--content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText\",\n        children: [transaction.merchant, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: moneyFormatter.format(transaction.amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText--hushed RampText--s\",\n        children: [transaction.employee.firstName, \" \", transaction.employee.lastName, \" - \", transaction.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputCheckbox, {\n      id: transaction.id,\n      checked: approved,\n      disabled: loading,\n      onChange: async newValue => {\n        // Update React state\n        const updatedTransactions = transactions.map(t => {\n          if (t.id === transaction.id) {\n            return { ...t,\n              approved: newValue\n            };\n          }\n\n          return t;\n        });\n        setTransactions(updatedTransactions); // Make API call\n\n        await consumerSetTransactionApproval({\n          transactionId: transaction.id,\n          newValue\n        });\n        setApproved(newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TransactionPane, \"upfLWJ2/7aYn1htrAXWLxv7Ls7Y=\");\n\n_c = TransactionPane;\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionPane\");","map":{"version":3,"names":["useState","InputCheckbox","TransactionPane","transaction","loading","setTransactionApproval","consumerSetTransactionApproval","approved","setApproved","transactions","setTransactions","merchant","moneyFormatter","format","amount","employee","firstName","lastName","date","id","newValue","updatedTransactions","map","t","transactionId","Intl","NumberFormat","style","currency"],"sources":["/Users/mykaelsss/Desktop/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx"],"sourcesContent":["\nimport { useState } from \"react\"\nimport { InputCheckbox } from \"../InputCheckbox\"\nimport { TransactionPaneComponent } from \"./types\"\n\n\nexport const TransactionPane: TransactionPaneComponent = ({\n  transaction,\n  loading,\n  setTransactionApproval: consumerSetTransactionApproval,\n}) => {\n\n  const [approved, setApproved] = useState(transaction.approved)\n  const [transactions, setTransactions] = useState(transaction);\n\n  return (\n      <div className=\"RampPane\">\n        <div className=\"RampPane--content\">\n          <p className=\"RampText\">{transaction.merchant} </p>\n          <b>{moneyFormatter.format(transaction.amount)}</b>\n          <p className=\"RampText--hushed RampText--s\">\n            {transaction.employee.firstName} {transaction.employee.lastName} - {transaction.date}\n          </p>\n        </div>\n        <InputCheckbox\n          id={transaction.id}\n          checked={approved}\n          disabled={loading}\n          onChange={async (newValue) => {\n\n            // Update React state\n            const updatedTransactions = transactions.map(t => {\n              if (t.id === transaction.id) {\n                return {...t, approved: newValue}\n              }\n              return t;\n            })\n            setTransactions(updatedTransactions);\n\n            // Make API call\n            await consumerSetTransactionApproval({\n              transactionId: transaction.id,\n              newValue,\n            })\n          setApproved(newValue)\n          }}\n        />\n      </div>\n  )\n}\n\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n})\n"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAIA,OAAO,MAAMC,eAAyC,GAAG,QAInD;EAAA;;EAAA,IAJoD;IACxDC,WADwD;IAExDC,OAFwD;IAGxDC,sBAAsB,EAAEC;EAHgC,CAIpD;EAEJ,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACG,WAAW,CAACI,QAAb,CAAxC;EACA,MAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAACG,WAAD,CAAhD;EAEA,oBACI;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAG,SAAS,EAAC,UAAb;QAAA,WAAyBA,WAAW,CAACQ,QAArC;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIC,cAAc,CAACC,MAAf,CAAsBV,WAAW,CAACW,MAAlC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAG,SAAS,EAAC,8BAAb;QAAA,WACGX,WAAW,CAACY,QAAZ,CAAqBC,SADxB,OACoCb,WAAW,CAACY,QAAZ,CAAqBE,QADzD,SACsEd,WAAW,CAACe,IADlF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,aAAD;MACE,EAAE,EAAEf,WAAW,CAACgB,EADlB;MAEE,OAAO,EAAEZ,QAFX;MAGE,QAAQ,EAAEH,OAHZ;MAIE,QAAQ,EAAE,MAAOgB,QAAP,IAAoB;QAE5B;QACA,MAAMC,mBAAmB,GAAGZ,YAAY,CAACa,GAAb,CAAiBC,CAAC,IAAI;UAChD,IAAIA,CAAC,CAACJ,EAAF,KAAShB,WAAW,CAACgB,EAAzB,EAA6B;YAC3B,OAAO,EAAC,GAAGI,CAAJ;cAAOhB,QAAQ,EAAEa;YAAjB,CAAP;UACD;;UACD,OAAOG,CAAP;QACD,CAL2B,CAA5B;QAMAb,eAAe,CAACW,mBAAD,CAAf,CAT4B,CAW5B;;QACA,MAAMf,8BAA8B,CAAC;UACnCkB,aAAa,EAAErB,WAAW,CAACgB,EADQ;UAEnCC;QAFmC,CAAD,CAApC;QAIFZ,WAAW,CAACY,QAAD,CAAX;MACC;IArBH;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkCD,CA3CM;;GAAMlB,e;;KAAAA,e;AA6Cb,MAAMU,cAAc,GAAG,IAAIa,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;EACpDC,KAAK,EAAE,UAD6C;EAEpDC,QAAQ,EAAE;AAF0C,CAA/B,CAAvB"},"metadata":{},"sourceType":"module"}