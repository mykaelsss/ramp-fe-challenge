{"ast":null,"code":"var _jsxFileName = \"/Users/mykaelsss/Desktop/ramp-fe-challenge/src/components/Transactions/transactionProvider.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionContext = /*#__PURE__*/createContext();\nexport function TransactionProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [transactions, setTransactions] = useState(mockData.transactions);\n\n  const updateTransactionApproval = (transactionId, newValue) => {\n    setTransactions(prevTransactions => prevTransactions.map(transaction => transaction.id === transactionId ? { ...transaction,\n      approved: newValue\n    } : transaction));\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: {\n      transactions,\n      updateTransactionApproval\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionProvider, \"VQiubC98rmURMKg5nPxtSU9toDA=\");\n\n_c = TransactionProvider;\nexport function useTransactionContext() {\n  _s2();\n\n  return useContext(TransactionContext);\n}\n\n_s2(useTransactionContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"names":["createContext","useContext","useState","TransactionContext","TransactionProvider","children","transactions","setTransactions","mockData","updateTransactionApproval","transactionId","newValue","prevTransactions","map","transaction","id","approved","useTransactionContext"],"sources":["/Users/mykaelsss/Desktop/ramp-fe-challenge/src/components/Transactions/transactionProvider.tsx"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\nconst TransactionContext = createContext();\n\nexport function TransactionProvider({ children }) {\n  const [transactions, setTransactions] = useState(mockData.transactions);\n\n  const updateTransactionApproval = (transactionId, newValue) => {\n    setTransactions((prevTransactions) =>\n      prevTransactions.map((transaction) =>\n        transaction.id === transactionId ? { ...transaction, approved: newValue } : transaction\n      )\n    );\n  };\n\n  return (\n    <TransactionContext.Provider value={{ transactions, updateTransactionApproval }}>\n      {children}\n    </TransactionContext.Provider>\n  );\n}\n\nexport function useTransactionContext() {\n  return useContext(TransactionContext);\n}\n"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,MAAMC,kBAAkB,gBAAGH,aAAa,EAAxC;AAEA,OAAO,SAASI,mBAAT,OAA2C;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAChD,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAACM,QAAQ,CAACF,YAAV,CAAhD;;EAEA,MAAMG,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,QAAhB,KAA6B;IAC7DJ,eAAe,CAAEK,gBAAD,IACdA,gBAAgB,CAACC,GAAjB,CAAsBC,WAAD,IACnBA,WAAW,CAACC,EAAZ,KAAmBL,aAAnB,GAAmC,EAAE,GAAGI,WAAL;MAAkBE,QAAQ,EAAEL;IAA5B,CAAnC,GAA4EG,WAD9E,CADa,CAAf;EAKD,CAND;;EAQA,oBACE,QAAC,kBAAD,CAAoB,QAApB;IAA6B,KAAK,EAAE;MAAER,YAAF;MAAgBG;IAAhB,CAApC;IAAA,UACGJ;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAhBeD,mB;;KAAAA,mB;AAkBhB,OAAO,SAASa,qBAAT,GAAiC;EAAA;;EACtC,OAAOhB,UAAU,CAACE,kBAAD,CAAjB;AACD;;IAFec,qB"},"metadata":{},"sourceType":"module"}